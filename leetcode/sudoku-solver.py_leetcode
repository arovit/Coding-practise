#!/usr/bin/python
class Solution:
    # @param board, a 9x9 2D array
    # Solve the Sudoku by modifying the input board in-place.
    # Do not return any value.
    def solveSudoku(self, board):
        self.solve(board)
        print board
    
    def findUnassigned(self, board):
        for row in range(9):
            for col in range(9):
                if board[row][col] == ".":
                    return row, col
        return -1, -1
    
    def solve(self, board):
        #no unassigned position is found, puzzle solved
        found = False
        for row in range(9):
            for col in range(9):
                if board[row][col] == ".":
                    found = True
                    for num in [1,2,3,4,5,6,7,8,9]:
                        if self.isSafe(num, row, col,board):
                            board[row][col] = num
                            if self.solve(board):
                                return True
                            board[row][col] = "."
                    return False 
        if not found:
            return True
        return False

    def isSafe(self, num, x, y, array):
        for i in range(9):
            if array[x][i] == num:
                return False
            elif array[i][y] == num:
                return False 
        xbox = x - (x%3)     
        ybox = y - (y%3)
        for i in range(3):
            for j in range(3):
                if array[xbox+i][ybox+j] == num:
                    return False
        return True
  

def chartest(x):
    if x == ".":
        return x
    else:
        return int(x)

sudo = ["..9748...","7........",".2.1.9...","..7...24.",".64.1.59.",".98...3..","...8.3.2.","........6","...2759.."]
sudo = [map(chartest, list(i)) for i in sudo]
sol = Solution()
sol.solveSudoku(sudo)
